##  Compton user configuration file (~/.config/compton.conf)
##  adapted for BunsenLabs Helium from:
##  http://duncanlock.net/blog/2013/06/07/how-to-switch-to-compton-for-beautiful-tear-free-compositing-in-xfce/
##  https://forums.bunsenlabs.org/viewtopic.php?pid=61249#p61249
##  and /usr/share/doc/compton/examples/compton.sample.conf
##  Various people have contributed to this file,
##  so the meaning of "I" is not well defined.
##
##  In most cases 'man compton' has more information.

#################################
#
#  Shadows
#
#################################

#  Enabled client-side shadows on windows.
shadow = true;
#  The blur radius for shadows. (default 12)
shadow-radius = 3;
#  The left offset for shadows. (default -15)
shadow-offset-x = -2;
#  The top offset for shadows. (default -15)
shadow-offset-y = -2;
#  The translucency for shadows. (default .75)
shadow-opacity = 0.6;

#################################
#
#  Opacity
#
#################################

inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;

blur-kern = "3x3box"
blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'",
    "_GTK_FRAME_EXTENTS@:c"
];

#################################
#
#  Fading
#
#################################

#  Fade windows during opacity changes.
fading = false;

#################################
#
#  Other
#
#################################

#  Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
#  Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
#  Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
#  Usually more reliable but depends on a EWMH-compliant WM. (openbox should be OK)
use-ewmh-active-win = true;
#  Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

#  Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
#  This prevents opacity being ignored for some apps.
#  For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

#  Specify refresh rate of the screen.
#  If not specified or 0, compton will try detecting this with X RandR extension.
refresh-rate = 0;
#  Specify a list of conditions of windows that should always be considered focused.
#focus-exclude = [ "class_g = 'Cairo-clock'" ];

#  Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
#  Known to cause flickering when redirecting/unredirecting windows.
#  paint-on-overlay may make the flickering less obvious.
unredir-if-possible = true;

#  Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;
#  Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
#  WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

#################################
#
#  Window type settings
#
#################################

#wintypes:
#{
#  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; };
#};


########################################################################
###  "advanced" machine specific options  ###

#  It is recommended to set these in /etc/bunsen/compton-startup
#  where they will be applied for all users, but can be set here.
#  Settings in /etc/bunsen/compton-startup have priority.
########################################################################


#################################
#
#  Backend
#
#################################

#  Backend to use: "xrender", "glx" or "xr_glx_hybrid". xrender is the default one.
#  GLX backend is typically much faster but depends on a sane driver.

backend = "glx";


#  Set VSync method. VSync methods currently available:
#  none: No VSync
#  drm: VSync with DRM_IOCTL_WAIT_VBLANK. May only work on some drivers.
#  opengl: Try to VSync with SGI_video_sync OpenGL extension. Only work on some drivers.
#  opengl-oml: Try to VSync with OML_sync_control OpenGL extension. Only work on some drivers.
#  opengl-swc: Try to VSync with SGI_swap_control OpenGL extension. Only work on some drivers. Works only with GLX backend. Known to be most effective on many drivers. Does not actually control paint timing, only buffer swap is affected, so it doesnâ€™t have the effect of --sw-opti unlike other methods. Experimental.
#  opengl-mswc: Try to VSync with MESA_swap_control OpenGL extension. Basically the same as opengl-swc above, except the extension we use.
#  (Note some VSync methods may not be enabled at compile time.)

#  --vsync opengl does NOT cause lag with Nvidia vsync disabled. I can turn
#  Nvidia vsync on after launching compton with --vsync opengl and I do not
#  get lag, but if I do it in the other order, I do get lag.
#  It still tears though in both situations.
#  I have seen various reports like the above.
#  Some nvidia drivers seem to create significant slowdowns.
#  Sometimes it might be useful to visit nvidia-settings if running
#  nvidia's proprietary drivers.

vsync = true;

#################################
#
#  GLX backend
#
#################################

#  GLX backend: Avoid using stencil buffer. This may not work with --blur-background. Tests show a 15% performance boost. Recommended.
#glx-no-stencil = true;

#  GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
#  My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
#  but a 20% increase when only 1/4 is.
#  My tests on nouveau show terrible slowdown.
#  Useful with --glx-swap-method, as well.
#glx-copy-from-front = false;

#  GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
#  My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.
#  May break VSync and is not available on some drivers.
#  Overrides --glx-copy-from-front.
#glx-use-copysubbuffermesa = true;

#  GLX backend: Avoid rebinding pixmap on window damage.
#  Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
#  Recommended if it works.
#glx-no-rebind-pixmap = true; < -- This option causes lockups in Virtualbox.

#  GLX backend: GLX buffer swap method we assume: undefined/exchange/copy/3/4/5/6/buffer-age
#  Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
#  undefined is the slowest and the safest, and the default value.
#  copy is fastest, but may fail on some drivers,
#  2-6 are gradually slower but safer (6 is still faster than 0).
#  Usually, double buffer means 2, triple buffer means 3.
#  buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
#  Useless with --glx-use-copysubbuffermesa.
#  Partially breaks --resize-damage.
#  Defaults to undefined.
#  I am using double-buffering here. This is a typical scenario wherein the
#  screen is drawn into memory before being painted on the screen.
#  Better machines might want to use triple buffering if they have native
#  hardware support for it on their graphics card.
#
#glx-swap-method = "exchange";

#################################

#  Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
#  Reported to have no effect, though.

#  Painting on X Composite overlay window. Recommended.

#  Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.
#  This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
#  unless you wish to specify a lower refresh rate than the actual value.
#sw-opti = true;
#
wintypes:
{
  dock = { shadow = false; }
  dnd = { shadow = false; }
}
