#!/usr/bin/env bash
#
# Configuration for lemonbar
#
# Inspired by dkeg :)

# Get colors and defind spacing

SEP="  "
SEPS=" "
SPC="%{B$bg}"$SEP"%{B-}"
grn=$(xrdb -query | grep color2 | awk '{ print $2 }')
bgrn=$(xrdb -query | grep color10 | awk '{ print $2 }')
blk=$(xrdb -query | grep color0 | awk '{ print $2 }')
ylw=$(xrdb -query | grep color3 | awk '{ print $2 }')
red=$(xrdb -query | grep color1 | awk 'NR==1 { print $2 }')
fg=$(xrdb -query | grep foreground | awk '{ print $2 }')
acc=$(xrdb -query | grep color1 | awk 'NR==1 { print $2 }')
bblk=$(xrdb -query | grep color8 | awk '{ print $2 }')
bg=$(xrdb -query | grep background | awk '{ print $2 }')
wht=$(xrdb -query | grep color7 | awk '{ print $2 }')
cyn=$(xrdb -query | grep color6 | awk '{ print $2  }')
blu=$(xrdb -query | grep color4 | awk '{ print $2  }')
mag=$(xrdb -query | grep color5 | awk '{ print $2  }')
# Get glyphs from siji
# Using queries is easier than c/p
glydate=$(echo -e "\ue015")
glyvol=$(echo -e "\ue05d")
glyvoloff=$(echo -e "\ue052")
glybatlow=$(echo -e "\ue035")
glybat=$(echo -e "\ue037")
glybatmax=$(echo -e "\ue09e")
glywlanhigh=$(echo -e "\ue048")
glywlanlow=$(echo -e "\ue047")
glybar=$(echo -e "\u2581")
glywin=$(echo -e "\ue1d8")

# Create template for colors
good="%{B$grn}%{F$bg}"
warn="%{B$ylw}%{F$bg}"
bad="%{B$red}%{F$bg}"
win="%{B$blu}%{F$bg}"
gend="%{B$blu}%{F$bg}"
acc="%{B$bg}%{F$fg}"
clr="%{B-}%{F-}"
gen="%{B$bg}%{F$fg}"
acc2="%{B$bg}%{F$bblk}"
volacc="%{B$bg}%{F$grn}"
wrk="%{B$bg}%{F$fg}"
nwrk="%{B$bg}%{F$fg}"

# Bar contents
content()
{
    # Get current workspaces
    workspaces()
    {
       cur=$(($(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')+1))
       #total=$(xprop -root _NET_NUMBER_OF_DESKTOPS | awk '{print $3}')
       total=5

       empty=$(echo -e "\ue000")

       seq=""

       for ((i=1; i<$cur && i<$((total-1)); i++)); do seq+="$gend$SEPS$i$SEPS$clr"; done
       seq+="$gen$SEPS$cur$SEPS$clr"
       for ((i=$(($cur+1)); i<$total; i++)); do seq+="$gend$SEPS$i$SEPS$clr"; done

       echo "$seq"
    }

    #Desktop name

    desktop()
        {
            num=$(xdotool get_desktop)
            
            if [[ $num == "0" ]]; then
                name="I"
            elif [[ $num == "1" ]]; then
                name="II"
            elif [[ $num == "2" ]]; then
                name="III"
            else 
                name="IV"
            fi

            echo $gen$SEP:$name$SEP
        }
    
    
    # Clock
    date-time()
    {
        clock="$acc$SEP$(date +'%I:%M')$SEP$clr"
        echo "$clock"
    }

    # Volume 0-100
    # Glyph will change when volume is muted
    volume()
    {
        vol=$(echo "`mpc volume | awk '{print $2}' | sed -n 's/%//p'` /10" | bc)
		on=$(eval printf \%${vol}s | sed 's/\s/ߺ/g')
		off=$(eval printf \%$(echo "10 - $vol" | bc)s | sed 's/\s/ߺ/g')
		sound=$(amixer get Master | sed -n 's/.*\[\([a-z]\+\)\]$/\1/p' | awk 'NR==1 {print $0}')

        if [ "$sound" = "on" ]; then
            echo "$volacc$glyvol$SEP$clr $acc$on$acc2$off"
        else
            echo "$bad$SEP$glyvoloff$SEP$clr"
        fi

    }

    # Battery 0-100
    # Battery considered charged at 98%
    # Glyph changes below 20 %
    battery()
    {
        state=$(cat /sys/class/power_supply/BAT0/status)
        cap=$(cat /sys/class/power_supply/BAT0/capacity)

        if [[ "$cap" -ge "90" ]] || [[ $state == "Charging" ]]; then
            label="$good$SEP$glybatmax$SEP$clr"
        elif [[ "$cap" -ge "20" ]]; then
            label="$warn$SEP$glybat$SEP$clr"
        else
            label="$bad$SEP$glybatlow$SEP$clr"
        fi

        cap=$gen$SEP$cap$SEP$clr
        echo $label$cap
    }

    # Actice window from X
    windowname()
    {
        title=$wrk$SEP$(xprop -id $(xprop -root _NET_ACTIVE_WINDOW | cut -d ' ' -f 5) WM_NAME | awk '{$1=$2="";print}' | tr -d '"' | cut -c 1-80)$SEP$clr
        label=$win$SEP$glywin$SEP$clr
		echo $label$title
    }
	

	



    # Get SSID using iwgetid
    # If iwgetid is not found, then DISCONNECTED will be displayed
    wireless()
    {
        wifi=$(nmcli -t -f active,ssid dev wifi | egrep '^yes' | cut -d\' -f2 | awk -F: '{ print $2 }')

        if [[ -z $wifi ]]; then
            wifi="DISCONNECTED"
        fi

        if [[ $wifi == "DISCONNECTED" ]]; then
            label=$bad$SEP$glywlanhigh$SEP$clr
        else
            label=$good$SEP$glywlanhigh$SEP$clr
        fi

        wifi=$nwrk$SEP$wifi$SEP$clr

        echo $label$wifi
    }


    # Bar contents left/right
	left="$(windowname)"
	center="$(date-time)"
    right="$(battery)$(wireless)"

    output="$left%{c}$center%{r}$right"
    echo -n "$output"
}

content

# Formatting options
fonts=" -f -ctrld-fixed-medium-r-normal-*-13-80-96-96-c-80-iso10646-1  -f -wuncon-siji-medium-r-normal--10-100-75-75-c-80-iso10646-1 -f -lucy-tewi-medium-r-normal-*-11-90-75-75-p-58-iso10646-1"
width=1366
height=24
# x - y offsets
xoff=0
yoff=0
# Border width
brdr=5
# Border color
brdrc=${bg}
# Bar background color
bbg=${bg}
# Bar foreground color
bfg=${fg}

# Final output formatting
options=" ${fonts} -g ${width}x${height}+${xoff}+${yoff} -B ${bbg} -F ${bfg}" 

# Main loop
while true; do
	echo $(content)
    sleep .5
done | lemonbar ${options}

